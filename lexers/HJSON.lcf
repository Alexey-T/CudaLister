object SyntAnal13: TLibSyntAnalyzer
  Formats = <
    item
      DisplayName = 'Symbol'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clMaroon
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'Number'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsBold]
    end
    item
      DisplayName = 'String'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clTeal
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clBlack
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Id const'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clNavy
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = []
    end
    item
      DisplayName = 'Comment'
      Font.Charset = DEFAULT_CHARSET
      Font.Color = clGray
      Font.Height = -13
      Font.Name = 'Courier New'
      Font.Style = [fsItalic]
    end>
  TokenRules = <
    item
      DisplayName = 'Comment'
      StyleName = 'Comment'
      TokenType = 1
      Expression = '//.*'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String'
      StyleName = 'String'
      TokenType = 4
      Expression = '"(\\"|.)*?("|$)'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Float'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\-? (\d+ \.)? \d+ e [\+\-]? \d+ |'#13#10'\-? \d+ \. \d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Integer'
      StyleName = 'Number'
      TokenType = 5
      Expression = '\-?\d+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Symbol'
      StyleName = 'Symbol'
      TokenType = 3
      Expression = '[\{\}\[\]:,]'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id keywords'
      StyleName = 'Id const'
      TokenType = 2
      Expression = '\b(false|true|null)\b'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'String no quote'
      StyleName = 'String'
      TokenType = 4
      Expression = '(?<=:\x20*) .+'
      ColumnFrom = 0
      ColumnTo = 0
    end
    item
      DisplayName = 'Id'
      StyleName = 'Id'
      TokenType = 2
      Expression = '[a-z_]\w*'
      ColumnFrom = 0
      ColumnTo = 0
    end>
  BlockRules = <
    item
      DisplayName = '{'
      ConditionList = <
        item
          TagList.Strings = (
            '{')
          TokenTypes = 8
        end>
      BlockOffset = 2
      BlockEnd = '}'
      EndOfTextClose = True
      NameFmt = '%s2'
      RefToCondEnd = True
      HighlightPos = cpAny
      CancelNextRules = True
      DrawStaple = True
      CollapseFmt = '%s2 ...'
      IgnoreAsParent = False
    end
    item
      DisplayName = '}'
      BlockType = btRangeEnd
      ConditionList = <
        item
          TagList.Strings = (
            '}')
          TokenTypes = 8
        end>
      BlockEnd = '{'
      HighlightPos = cpAny
      CancelNextRules = True
      IgnoreAsParent = False
    end
    item
      DisplayName = 'param'
      ConditionList = <
        item
          TagList.Strings = (
            '{')
          CondType = tcNotEqual
          TokenTypes = 8
        end
        item
          TagList.Strings = (
            ':')
          TokenTypes = 8
        end
        item
          TokenTypes = 20
        end>
      NameFmt = '%s0'
      HighlightPos = cpAny
      NoEndRule = True
      IgnoreAsParent = False
    end>
  CodeTemplates = <>
  SubAnalyzers = <>
  SampleText.Strings = (
    '{'
    '    config_menus_from: menu.json,'
    '    fif_fold_prev_res:true,'
    '    int_value: -20,'
    '    fif_lexers:['
    '        FiF'
    '        ],'
    '    fif_focus_to_rpt:false,'
    '    fif_mark_style:{'
    '        bg_c:"",'
    '        font_c:#0000FF,'
    '        borders:{'
    '            left:rounded,'
    '//          b:dotted,'
    '            top:rounded'
    '            left:"",'
    '        }'
    '    },'
    '    itc_word_signs: _.,'
    
      '    intextbookmk_signs: ["NOTE:", "NB!", "TODO:", "todo:", "FIX:' +
      '", "#!!"],'
    '}')
  TokenTypeNames.Strings = (
    'Unknown'
    'Comment'
    'Identifier'
    'Symbol'
    'String'
    'Number')
  Extentions = 'hjson'
  LexerName = 'HJSON'
  Notes.Strings = (
    'Alexey (Synwrite)')
  LineComment = '//'
  Charset = DEFAULT_CHARSET
end
